class 水果:
    #水果類別的建構子
    def __init__(目前的self, 輸入的水果名稱, 輸入的水果重量, 輸入的水果單價):
        目前的self._水果名稱 = 輸入的水果名稱
        目前的self._水果重量 = 輸入的水果重量
        目前的self._水果單價 = 輸入的水果單價
 
    #計算水果價格的函式
    def 計算水果價格(目前的self):
        return 目前的self._水果重量*目前的self._水果單價
 
水果物件1 = 水果("蘋果", 300, 0.05)
水果物件2 = 水果("香蕉", 500, 0.020)
水果物件3 = 水果("西瓜", 1300, 0.015)
print(水果物件1._水果名稱)
print("價格=",水果物件1._水果重量*水果物件1._水果單價)
print("價格=",水果物件1.計算水果價格()) #同17行，但是使用計算水果價格的函式來執行
print(水果物件2._水果名稱)
print("價格=",水果物件2._水果重量*水果物件2._水果單價)
print("價格=",水果物件2.計算水果價格())
 
 
class 每日運動量:
    #每日運動量的建構子
    def __init__(目前的self, 輸入的運動名稱, 輸入的運動時間分鐘, 輸入的單位時間消耗的卡數):
        目前的self._運動名稱 = 輸入的運動名稱
        目前的self._運動時間分鐘 = 輸入的運動時間分鐘
        目前的self._單位時間消耗的卡數 = 輸入的單位時間消耗的卡數
 
    #計算運動時間內所消耗總卡路里數的函式
    def 計算運動時間內所消耗總卡路里數(目前的self):
        return 目前的self._運動時間分鐘*目前的self._單位時間消耗的卡數
 
#建立每日運動量類別的物件daily_exercise_1
daily_exercise_1 = 每日運動量("跑步", 30, 10)
daily_exercise_2 = 每日運動量("游泳", 50, 20)
total_kcal = daily_exercise_1.計算運動時間內所消耗總卡路里數()+daily_exercise_2.計算運動時間內所消耗總卡路里數()
print(f'每日運動量統計: {daily_exercise_1._運動名稱}+{daily_exercise_2._運動名稱} 消耗總卡路里數= {total_kcal}')